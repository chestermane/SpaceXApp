{"ast":null,"code":"import _classCallCheck from \"/Users/Evan/spacex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Evan/spacex/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Evan/spacex/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Evan/spacex/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Evan/spacex/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Evan/spacex/src/container/landing.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Flights from '../componets/flights';\nimport { Fragment } from 'react';\nimport * as action from '../store/actions/flight-actions';\n\nvar Landing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Landing, _Component);\n\n  function Landing() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Landing);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Landing)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.flights = _this.props.flightData.map(function (flight) {\n      return React.createElement(Flights, {\n        flight: flight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n    });\n    return _this;\n  }\n\n  _createClass(Landing, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.loadFlightData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.flights);\n    }\n  }]);\n\n  return Landing;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    flightData: state.flightData\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loadFlightData: function loadFlightData() {\n      return dispatch(action.loadFlightData());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Landing);","map":{"version":3,"sources":["/Users/Evan/spacex/src/container/landing.js"],"names":["React","Component","connect","Flights","Fragment","action","Landing","flights","props","flightData","map","flight","loadFlightData","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAGA,OAAO,KAAKC,MAAZ,MAAwB,iCAAxB;;IAEMC,O;;;;;;;;;;;;;;;;;UAUFC,O,GAAU,MAAKC,KAAL,CAAWC,UAAX,CAAsBC,GAAtB,CAA0B,UAAAC,MAAM,EAAI;AAClD,aAAc,oBAAC,OAAD;AAAS,QAAA,MAAM,EAAEA,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AACK,KAFS,C;;;;;;yCATW;AACjB,WAAKH,KAAL,CAAWI,cAAX;AAEH;;;6BAYO;AACJ,aAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN,KAAKL,OADC,CAAP;AAKH;;;;EAtBiBN,S;;AAyBtB,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BL,IAAAA,UAAU,EAAEK,KAAK,CAACL;AADY,GAAL;AAAA,CAA7B;;AAIA,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpCJ,IAAAA,cAAc,EAAE;AAAA,aAAMI,QAAQ,CAACX,MAAM,CAACO,cAAP,EAAD,CAAd;AAAA;AADoB,GAAL;AAAA,CAAnC;;AAMA,eAAeV,OAAO,CAACW,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport Flights from '../componets/flights';\nimport {Fragment} from 'react';\n\n\nimport * as action from '../store/actions/flight-actions'\n\nclass Landing extends Component {\n    componentWillMount() {\n        this.props.loadFlightData();\n        \n    }\n\n    if\n\n\n\n    flights = this.props.flightData.map(flight => {\nreturn        <Flights flight={flight} />\n    }) ;\n\n\n\n    render(){\n        return(<Fragment>\n        {this.flights}\n        </Fragment>)\n\n        \n    }\n}\n\nconst mapStateToProps = state => ({  \n    flightData: state.flightData\n})\n\nconst mapDispatchToProps = dispatch => ({\n    loadFlightData: () => dispatch(action.loadFlightData())\n})\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Landing);"]},"metadata":{},"sourceType":"module"}