{"ast":null,"code":"import _classCallCheck from \"/Users/Evan/spacex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Evan/spacex/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Evan/spacex/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Evan/spacex/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Evan/spacex/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Evan/spacex/src/container/landing.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Flights from '../componets/flights';\nimport { Fragment } from 'react';\nimport * as action from '../store/actions/flight-actions';\n\nvar Landing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Landing, _Component);\n\n  function Landing() {\n    _classCallCheck(this, Landing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Landing).apply(this, arguments));\n  }\n\n  _createClass(Landing, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.loadFlightData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var flight = this.props.flightData ? this.props.flightData : null;\n\n      if (flight) {\n        var _flights;\n\n        _flights = this.props.flightData.map(function (flight) {\n          return React.createElement(Flights, {\n            flight: flight,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          });\n        });\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"loading...\", flights.name);\n    }\n  }]);\n\n  return Landing;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    flightData: state.flightData\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loadFlightData: function loadFlightData() {\n      return dispatch(action.loadFlightData());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Landing);","map":{"version":3,"sources":["/Users/Evan/spacex/src/container/landing.js"],"names":["React","Component","connect","Flights","Fragment","action","Landing","props","loadFlightData","flight","flightData","flights","map","name","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAGA,OAAO,KAAKC,MAAZ,MAAwB,iCAAxB;;IAEMC,O;;;;;;;;;;;;;yCACmB;AACjB,WAAKC,KAAL,CAAWC,cAAX;AAEH;;;6BACO;AACJ,UAAIC,MAAM,GAAG,KAAKF,KAAL,CAAWG,UAAX,GAAwB,KAAKH,KAAL,CAAWG,UAAnC,GAAgD,IAA7D;;AACA,UAAGD,MAAH,EAAW;AACP,YAAIE,QAAJ;;AACAA,QAAAA,QAAO,GAAG,KAAKJ,KAAL,CAAWG,UAAX,CAAsBE,GAAtB,CAA0B,UAAAH,MAAM,EAAI;AAC3C,iBAAO,oBAAC,OAAD;AAAS,YAAA,MAAM,EAAEA,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACF,SAFS,CAAV;AAIH;;AACD,aAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEFE,OAAO,CAACE,IAFN,CAAP;AAIH;;;;EAlBiBZ,S;;AAqBtB,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BL,IAAAA,UAAU,EAAEK,KAAK,CAACL;AADY,GAAL;AAAA,CAA7B;;AAIA,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpCT,IAAAA,cAAc,EAAE;AAAA,aAAMS,QAAQ,CAACZ,MAAM,CAACG,cAAP,EAAD,CAAd;AAAA;AADoB,GAAL;AAAA,CAAnC;;AAMA,eAAeN,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport Flights from '../componets/flights';\nimport {Fragment} from 'react';\n\n\nimport * as action from '../store/actions/flight-actions'\n\nclass Landing extends Component {\n    componentWillMount() {\n        this.props.loadFlightData();\n        \n    }\n    render(){\n        let flight = this.props.flightData ? this.props.flightData : null;\n        if(flight) {\n            let flights;\n            flights = this.props.flightData.map(flight => {\n               return <Flights flight={flight}/>\n            });\n          \n        }\n        return(<Fragment>\n            loading...\n            {flights.name}\n        </Fragment>)   \n    }\n}\n\nconst mapStateToProps = state => ({  \n    flightData: state.flightData\n})\n\nconst mapDispatchToProps = dispatch => ({\n    loadFlightData: () => dispatch(action.loadFlightData())\n})\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Landing);"]},"metadata":{},"sourceType":"module"}