{"ast":null,"code":"import _classCallCheck from \"/Users/Evan/spacex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Evan/spacex/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Evan/spacex/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Evan/spacex/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Evan/spacex/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Evan/spacex/src/container/landing.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Flights from '../componets/flights';\nimport { Fragment } from 'react';\nimport * as action from '../store/actions/flight-actions';\n\nvar Landing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Landing, _Component);\n\n  function Landing() {\n    _classCallCheck(this, Landing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Landing).apply(this, arguments));\n  }\n\n  _createClass(Landing, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.loadFlightData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var flight = this.props.flightData ? this.props.flightData : null;\n\n      if (flight !== null) {\n        var flights = this.props.flightData.map(function (flight) {\n          return React.createElement(Flights, {\n            flight: flight,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          });\n        });\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"loading...\");\n    }\n  }]);\n\n  return Landing;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    flightData: state.flightData\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loadFlightData: function loadFlightData() {\n      return dispatch(action.loadFlightData());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Landing);","map":{"version":3,"sources":["/Users/Evan/spacex/src/container/landing.js"],"names":["React","Component","connect","Flights","Fragment","action","Landing","props","loadFlightData","flight","flightData","flights","map","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IACIC,SADJ,QAEO,OAFP;AAGA,SACIC,OADJ,QAEO,aAFP;AAGA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SACIC,QADJ,QAEO,OAFP;AAKA,OAAO,KAAKC,MAAZ,MAAwB,iCAAxB;;IAEMC,O;;;;;;;;;;;;;yCACmB;AACjB,WAAKC,KAAL,CAAWC,cAAX;AAEH;;;6BASQ;AACL,UAAIC,MAAM,GAAG,KAAKF,KAAL,CAAWG,UAAX,GAAwB,KAAKH,KAAL,CAAWG,UAAnC,GAAgD,IAA7D;;AACA,UAAID,MAAM,KAAK,IAAf,EAAqB;AACjB,YAAIE,OAAO,GAAG,KAAKJ,KAAL,CAAWG,UAAX,CAAsBE,GAAtB,CAA0B,UAAAH,MAAM,EAAI;AAC9C,iBAAO,oBAAC,OAAD;AAAS,YAAA,MAAM,EAClBA,MADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAIH,SALa,CAAd;AAMH;;AAMD,aAAS,oBAAE,QAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAT;AAMC;;;;EAlCaR,S;;AAqClB,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BJ,IAAAA,UAAU,EAAEI,KAAK,CAACJ;AADY,GAAL;AAAA,CAA7B;;AAIA,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACpCR,IAAAA,cAAc,EAAE;AAAA,aAAMQ,QAAQ,CAACX,MAAM,CAACG,cAAP,EAAD,CAAd;AAAA;AADoB,GAAL;AAAA,CAAnC;;AAMA,eAAeN,OAAO,CAACW,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,OAA7C,CAAf","sourcesContent":["import React, {\n    Component\n} from 'react';\nimport {\n    connect\n} from 'react-redux'\nimport Flights from '../componets/flights';\nimport {\n    Fragment\n} from 'react';\n\n\nimport * as action from '../store/actions/flight-actions'\n\nclass Landing extends Component {\n    componentWillMount() {\n        this.props.loadFlightData();\n\n    }\n\n\n\n\n\n\n\n\n    render() {\n        let flight = this.props.flightData ? this.props.flightData : null;\n        if (flight !== null) {\n            let flights = this.props.flightData.map(flight => {\n                return <Flights flight = {\n                    flight\n                }\n                />\n            })\n        }\n\n\n\n\n\n        return ( < Fragment >\n            loading...\n            <\n            /Fragment>)\n\n\n        }\n    }\n\n    const mapStateToProps = state => ({\n        flightData: state.flightData\n    })\n\n    const mapDispatchToProps = dispatch => ({\n        loadFlightData: () => dispatch(action.loadFlightData())\n    })\n\n\n\n    export default connect(mapStateToProps, mapDispatchToProps)(Landing);"]},"metadata":{},"sourceType":"module"}